---
- hosts: node01
  gather_facts: false
  tasks:
    - name: Run kubeadm init
      command: kubeadm init --experimental-upload-certs --pod-network-cidr=10.0.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf
      register: output
      become: true

    - debug:
        var: output

    - name: Copy kube conf to localhost
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ playbook_dir }}/"
        flat: true
      become: true

    - name: Create a Deployment by reading the definition from a local file
      k8s:
        kubeconfig: "{{ playbook_dir }}/admin.conf"
        src: files/kube-router.yml
        state: present
      delegate_to: localhost

    - name: Cleanup kube-proxy deamonset
      k8s:
        kubeconfig: "{{ playbook_dir }}/admin.conf"
        name: kube-proxy
        api_version: v1
        kind: DaemonSet
        namespace: kube-system
        state: absent
      delegate_to: localhost

# TODO: Rewirte to crictl
#    - name: Cleanup kube-proxy
#      command: docker run --privileged -v /lib/modules:/lib/modules --net=host k8s.gcr.io/kube-proxy-amd64:v1.10.2 kube-proxy --cleanup

#    - name: Make node schedualable when configured as worker
#      command: "kubectl --kubeconfig={{ playbook_dir }}/admin.conf taint node {{ inventory_hostname }} node-role.kubernetes.io/master:NoSchedule-"
#      when: "'kube-node' in group_names"
#      delegate_to: localhost

- hosts: kube-node
  become: true
  gather_facts: true
  tasks:
    - name: Create new token
      command: kubeadm token generate
      register: token
      delegate_to: node01

    - name: Generate join command from one of the masters
      command: "kubeadm token create {{ token.stdout }} --print-join-command"
      register: join_command
      delegate_to: node01

    - name: Join to cluser
      command: "{{ join_command.stdout }}"
      register: output

    - debug:
        var: output
