---
# Block to delegate_to: first master
- block:
    - name: Create kubeadm config dir
      file:
        path: /etc/kubernetes/kubeadm
        state: directory

    - name: Place kubeadm-config
      template:
        src: kubeadm-config.j2
        dest: /etc/kubernetes/kubeadm/kubeadm-config.yaml

    - name: Prepull all kubeadm images
      command: kubeadm config images pull
      become: true

    - name: Run kubeadm init
      command: kubeadm init
                --experimental-upload-certs
                --config=/etc/kubernetes/kubeadm/kubeadm-config.yaml
      args:
        creates: /etc/kubernetes/admin.conf
      become: true

    - name: Set node to initialized since kubeadm has completed succesfully
      file:
        path: /etc/kubernetes/.ansible_init
        state: touch

    - name: Set this master as command node
      set_fact:
        command_node: "{{ inventory_hostname }}"

    - name: Copy kube conf to localhost
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ playbook_dir }}/"
        flat: true
      become: true

    # Delegate to localhost since python modules not available on masters
    - name: Setup network plugin
      k8s:
        kubeconfig: "{{ playbook_dir }}/admin.conf"
        src: "files/kube-router-{{ host_architecture }}.yml"
        state: present
      delegate_to: localhost
      become: false

    - name: Cleanup kube-proxy deamonset
      k8s:
        kubeconfig: "{{ playbook_dir }}/admin.conf"
        name: kube-proxy
        api_version: v1
        kind: DaemonSet
        namespace: kube-system
        state: absent
      delegate_to: localhost
      become: false

    # TODO: Rewirte to crictl
    # - name: Cleanup kube-proxy
    #   command: docker run --privileged -v /lib/modules:/lib/modules --net=host k8s.gcr.io/kube-proxy-amd64:v1.10.2 kube-proxy --cleanup
    #   delegate_to: "{{ groups.kubemaster[0] }}"

    - import_tasks: kubernetes/cluster-healthy.yml

    - name: Make master node schedualable when configured as worker
      command: "kubectl --kubeconfig /etc/kubernetes/admin.conf taint node {{ inventory_hostname }} node-role.kubernetes.io/master:NoSchedule-"
      when: "'kubenode' in group_names"

    - name: Label node as worker
      command: "kubectl --kubeconfig /etc/kubernetes/admin.conf label node {{ inventory_hostname }} {{ label }}"
      when: "'kubenode' in group_names"
      vars:
        label: node-role.kubernetes.io/worker=worker  # Needed for escaping equals and dots

  # Delegate for whole block
  run_once: true
  delegate_to: "{{ groups.kubemaster[0] }}"
