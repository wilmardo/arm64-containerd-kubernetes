---
# Block to delegate_to: first master
- block:
    - name: Create kubeadm config dir
      file:
        path: /etc/kubernetes/kubeadm
        state: directory

    - name: Place kubeadm-config
      template:
        src: kubeadm-config.j2
        dest: /etc/kubernetes/kubeadm/kubeadm-config.yaml

    - name: Prepull all kubeadm images
      command: kubeadm config images pull
      become: true

    - name: Run kubeadm init
      command: "kubeadm init
                --experimental-upload-certs
                --config=/etc/kubernetes/kubeadm/kubeadm-config.yaml
                {{ k8s_disable_swap | ternary('', '--ignore-preflight-errors Swap') }}"
      args:
        creates: /etc/kubernetes/admin.conf
      become: true

    - name: Set node to initialized since kubeadm has completed succesfully
      file:
        path: /etc/kubernetes/.ansible_init
        state: touch

    - name: Set this master as command node
      set_fact:
        command_node: "{{ inventory_hostname }}"

    - name: Copy kube conf to localhost
      fetch:
        src: /etc/kubernetes/admin.conf
        dest: "{{ playbook_dir }}/"
        flat: true
      become: true

    - name: Setup network plugin
      command: kubectl apply -f -
      args:
        stdin: "{{ lookup('file', network_file) }}"
      environment:
        KUBECONFIG: "{{ kubeconfig_default_location }}"
      vars:
        network_file: "files/kube-router-{{ host_architecture }}.yml"

    - name: Cleanup kube-proxy daemonset
      command: kubectl -n kube-system delete daemonset kube-proxy
      environment:
        KUBECONFIG: "{{ kubeconfig_default_location }}"

    # TODO: Rewirte to crictl
    # - name: Cleanup kube-proxy
    #   command: docker run --privileged -v /lib/modules:/lib/modules --net=host k8s.gcr.io/kube-proxy-amd64:v1.10.2 kube-proxy --cleanup
    #   delegate_to: "{{ groups.kubemaster[0] }}"

    - import_tasks: kubernetes/cluster-healthy.yml

    - name: Make master node schedualable when configured as worker
      command: "kubectl taint node {{ inventory_hostname }} node-role.kubernetes.io/master:NoSchedule-"
      environment:
        KUBECONFIG: "{{ kubeconfig_default_location }}"
      when: "'kubenode' in group_names"

    - name: Label node as worker
      command: "kubectl label node {{ inventory_hostname }} {{ label }}"
      environment:
        KUBECONFIG: "{{ kubeconfig_default_location }}"
      when: "'kubenode' in group_names"
      vars:
        label: node-role.kubernetes.io/worker=worker  # Needed for escaping equals and dots

  # Delegate for whole block
  run_once: true
  delegate_to: "{{ groups.kubemaster[0] }}"
