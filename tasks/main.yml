---
# Lended from kubespray https://github.com/kubernetes-sigs/kubespray/blob/master/roles/etcd/tasks/main.yml#L8
- name: ansible_architecture_rename
  set_fact:
    host_architecture: >-
      {%- if ansible_architecture in architecture_groups -%}
        {{ architecture_groups[ansible_architecture] }}
      {%- else -%}
        {{ ansible_architecture }}
      {% endif %}

- name: Set hostname to Ansible inventory_hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: Install apt-transport-https for HTTPS repo's
  package:
    name:
      - apt-transport-https
      - ca-certificates
    state: present

- name: Import containerd installtion
  import_tasks: containerd.yml

- name: Import kubernetes installtion
  import_tasks: kubernetes.yml

- name: Include crictl installtion
  include_tasks: crictl.yml
  when: crictl_install | bool

- name: Include haproxy installtion
  include_tasks: haproxy.yml
  when:
    - haproxy_install | bool
    - "'kubemaster' in group_names"

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  meta: flush_handlers

- name: Wait for containerd to be running
  wait_for:
    path: /var/run/containerd/containerd.sock
    state: present

- name: Check if a master is initialized
  stat:
    path: /etc/kubernetes/admin.conf
  delegate_to: "{{ item }}"
  loop: "{{ groups['kubemaster'] }}"
  register: master_init

- name: Start init cluster when not initialized
  include_tasks: kubernetes/init-cluster.yml
  run_once: true
  # Only run when none of the masters have an existing /etc/kubernetes/admin.conf
  when: master_init | selectattr('exists') | length == 0

- name: Check if a master is initialized
  stat:
    path: /etc/kubernetes/admin.conf
  delegate_to: "{{ item }}"
  loop: "{{ groups['kubemaster'] }}"
  register: master_init

- fail:
    msg: No master initialized
  when: master_init | selectattr('exists') | length == 0

# This works because the whole group is passed to master_init so the mapping master_init <> groups['kubemaster'] should match
- name: Create list of available masters
  set_fact:
    available_masters: "{{ available_masters + [ groups['kubemaster'][index] ] }}"
  loop: "{{ master_init }}"
  loop_control:
    index_var: index
  when: item.exists

- name: Wait for cluster to become healthy
  wait_for:
    port: 443
    host: "{{ k8s_cluster_api_vip }}"
    state: started

- name: Check if node is available in cluster
  shell: "kubectl --kubeconfig={{ playbook_dir }}/admin.conf get nodes | grep {{ inventory_hostname }}"
  delegate_to: localhost
  changed_when: false
  failed_when: node_available.rc == 2  # Needed for grep
  register: node_available

- name: Add node when not yet available
  include_tasks: kubernetes/add-node.yml
  when: node_available.rc != 0  # Node not found by grep
